<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSPY v5 rel. 2 U (http://www.xmlspy.com) by 123 (456) -->
#set($environment = $environment)
#set($models = $protoDom.getModelDoms())
#set($baseParams = $protoDom.getBaseParamDoms())
#set($controllers = $protoDom.getControllerDoms())
#set($marcoFiles = $protoDom.getMarcoFileDoms())
#set($controller_package = $environment.controller_package)
#set($model_package = $environment.model_package)
#set($marcos_package = $environment.marcos_package)
#set($params_package = $environment.params_package)

#set($service_name = $protoDom.file_name)
<proto>

#foreach($controller in $controllers)
    <file name="${tool.getPath($controller_package)}${controller.name}ConsumerHandler.java">
        <![CDATA[
${environment.notes}
package ${controller_package};
import ${model_package}.*;
import ${params_package}.*;
import java.util.*;
import org.springframework.amqp.rabbit.annotation.*;
import com.rabbitmq.client.Channel;
import org.springframework.amqp.core.Message;

public interface ${controller.name}ConsumerHandler {
@RabbitListener(queues = "${controller.url}")
#foreach($method in ${controller.methodDoms})
    @RabbitHandler
    void ${method.name}(${controller.name}${tool.toUpperCaseFirstOne($method.name)}Params m${controller.name}${tool.toUpperCaseFirstOne($method.name)}Params, Channel channel, Message message) throws Exception;
#end
}
        ]]>

    </file>
    <file name="${tool.getPath($controller_package)}${controller.name}ProducerHandler.java">
        <![CDATA[
${environment.notes}
package ${controller_package};
import ${model_package}.*;
import ${params_package}.*;
import java.util.List;
import org.springframework.amqp.core.AmqpTemplate;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

@Component
public class ${controller.name}ProducerHandler {
    @Autowired
    private AmqpTemplate amqpTemplate;
#foreach($method in ${controller.methodDoms})
    /**
     * ${method.des}
     */
    public void ${method.name}(${controller.name}${tool.toUpperCaseFirstOne($method.name)}Params m${controller.name}${tool.toUpperCaseFirstOne($method.name)}Params) {
        amqpTemplate.convertAndSend("${method.url}", m${controller.name}${tool.toUpperCaseFirstOne($method.name)}Params);
    }
#end
}
        ]]>
    </file>
#end
</proto>